section.content .info {
    font-size: 0.8em;
}

.content nav.sidebar {
    @extend .info;
    padding: 30px;
}
/* Can not extends from the father because we have an error about syntex
section.content .info {
    font-size: 0.8 em;
}

.content nav.sidebar {
    @extend section.content .info;
    padding: 30px;
}
END: comment
*/

@mixin reset-list {
    margin: 0;
    padding: 0;
    list-style: none;
}

ul {
    @include reset-list();
    background-color: #f1f1f1;
    li {
        padding: 10px;
        border: 1px solid #ccc;
    }
}

@mixin center($w) {
    margin : 0 auto;
    width: $w;
}
.main {
    @include center(300px);
    padding: 20px;
}
.box {
    @include center(100px);
    background-color: #f1f1f1;
}

@mixin center($prop, $val) {
    margin:  0 auto;
    width: 300px;
    #{$prop}: $val;
}
.main {
    @include center(color, red);
    padding: 20px;
}
.box {
    @include center(font-size, 24px);
    background-color: #f1f1f1;
}

@mixin propMixi ($prop, $val) {
    -webkit-#{$prop} : $val;
       -moz-#{$prop} : $val;
        -ms-#{$prop} : $val;
            #{$prop} : $val;
}

.main {
    @include propMixi(box-shadow, 3px 3px 2px blue);
    padding: 20px;
}
.box {
    @include propMixi(transform, rotate(90deg));
    background-color: #f1f1f1;
}

%reset-list {
    margin: 0;
    padding: 0;
    background: none;
}
ul {
    @extend %reset-list;
    background-color: #f1f1f1;
    li {
        padding: 10px;
        border: 1px solid #ccc;
    }
}
div {
    @extend %reset-list;
}
/*
Do thuoc tinh chat gom su dung chung cac thuoc tinh nen placeholder khong su dung cho doi so
$center2($w2) {
    margin: 0 auto;
    width: $w2;
}

$center1($w) {
    margin: 0 auto;
    width: $w; 
}
.main {
    @extend $center1(300px);
    padding: 20px;
}
.box {
    @extend $center(100px);
    background-color: #f1f1f1;
}
*/
@function getWidth($widthWrap, $item) {
    @return $widthWrap / $item;
}
.list {
    width: 600px;
    li {
        float: left;
        width: getWidth(600px, 4);
    }
}

@function columns($item) {
    @return 100%/$item;
}
.two-cols {
    width: columns(2);
}
.three-cols {
    width: columns(3);
}
.four-cols {
    width: columns(4);
}
.five-cols {
    width: columns(5);
}

@mixin position($pos, $y, $x) {
    position: absolute;
    @if $pos == 'tl' {
        left: $x;
        top: $y;
    }
    @else if $pos == 'tr' {
        right: $x;
        top: $y;
    }
    @else if $pos == 'bl' {
        left: $x;
        bottom: $y;
    }
    @else if $pos == 'br' {
        right: $x;
        bottom: $y;
    }
}
#main {
    position: relative;
    .box01 {
        @include position('tl', 20px, 40px);
    }
    .box02 {
        @include position('bl', 50px, 30px);
    }
}

@mixin dbr-position($pos, $radious) {
    border-radius: 0;
    @if $pos == 'top' {
        border-#{$pos}-left-radious: $radious;
        border-#{$pos}-right-radious: $radious;
    }
    @else if $pos == 'bottom' {
        border-#{$pos}-left-radious: $radious;
        border-#{$pos}-right-radious: $radious;
    }
    @else if $pos == 'right' {
        border-bottom-#{$pos}-radious: $radious;
        border-top-#{$pos}-radious: $radious;
    }
    @else if $pos == 'left' {
        border-bottom-#{$pos}-radious: $radious;
        border-top-#{$pos}-radious: $radious;
    }
}
#main01 {
    @include dbr-position(top, 4px)
}

$lenght: 5;
@for $i from 1 through $lenght {
    .item-#{$i} {
        opacity: 1/$i;
    }
}

$total-cols: 8;
@function column-width($col) {
    @return percentage($col/$total-cols);
}
@for $i from 1 through $total-cols {
    .col-#{$i} {
        width: column-width($i);
    }
}

$base-color: #036;
@for $i from 1 through 3 {
    ul:nth-child(3n + #{$i}) {
        background-color: lighten($base-color, $i*5%);
    }
}

$i: 4;
@while $i > 0 {
    .item-#{$i} {
        width: 800px/$i;
        $i: $i - 1;
    }
}

$i : 3;
@while $i < 5 {
    .item-#{$i} {
        color: red;
        $i: $i + 1;
    }
}

$sizes: 40px, 50px, 80px;
@each $size in $sizes {
    .iccon-#{$size} {
        font-size: $size;
        height: $size;
        width: $size;
    }
}

$val: (normal, bold, 10px), (emphasis, bold, 15px);
@each $name, $style, $size in $val {
    .#{$name} {
        font-weight: $style;
        text-emphasis: $size;
    }
}

$val: (default: normal, emphasis: bold);
@each $name, $style in $val {
    .#{$name} {
        font-weight: $style;
    }
}


@import 'base', 'reset';
.list {
    color: red;
    li {
        font-size: 14px;
    }
}

